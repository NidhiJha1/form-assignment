{"version":3,"sources":["coponents/tableData.js","flag.svg","App.js","index.js"],"names":["TableData","formData","className","map","data","index","textField","email","name","phoneNumber","value","TabPane","Tabs","App","useState","localStorage","getItem","JSON","parse","getDataFromLocalStorage","setFormData","setTextField","setEmail","setName","setPhoneNumber","setValue","enteredNameIsValid","setEnteredNameISValid","useEffect","setItem","stringify","nameInputClasses","labelClasses","defaultActiveKey","tab","onSubmit","event","preventDefault","trim","type","onChange","e","target","minLength","src","flag","alt","Group","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11d12a7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './table.css';\r\n\r\nconst TableData = ({formData}) => {\r\n    return(\r\n        <>\r\n        <div className=\"table-wrapper\">\r\n          <div className=\"text-hading\">All Feedback</div>\r\n\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>From Name</th>\r\n                <th>Text Field</th>\r\n                <th>Phone field</th>\r\n                <th>Email Field</th>\r\n                <th>Radio Button</th>\r\n                <th>Name</th>\r\n              </tr>\r\n            </thead>\r\n          <tbody>\r\n          {formData.map((data,index) => (\r\n            <tr key={index}>\r\n                <td>Aromatic Bar</td>\r\n                <td>{data.textField}</td>\r\n                <td>{data.email}</td>\r\n                <td>{data.name}</td>\r\n                <td>{data.phoneNumber}</td>\r\n                <td>{data.value}</td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n          </table>\r\n          </div>  \r\n        </>\r\n      \r\n    );\r\n};\r\n\r\nexport default TableData;\r\n","export default __webpack_public_path__ + \"static/media/flag.1e883071.svg\";","import 'antd/dist/antd.css'; \nimport './App.css';\nimport { Tabs } from 'antd';\nimport TableData from './coponents/tableData';\nimport React, { useEffect, useState } from \"react\";\nimport { Radio } from 'antd';\nimport flag from './flag.svg';\n\n\n\nconst getDataFromLocalStorage = () => {\n  const data = localStorage.getItem('formData');\n  if(data){\n    return JSON.parse(data);\n  }\n  else{\n    return [];\n  }\n}\n\nconst { TabPane } = Tabs;\nfunction App() {\n\n  const [formData,setFormData] = useState(getDataFromLocalStorage());\n\n  const [textField, setTextField] = useState('');\n  const [email,setEmail] = useState('');\n  const [name,setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n  const [value,setValue] = useState('Excellent');\n\n  const [enteredNameIsValid,setEnteredNameISValid] = useState(true);\n \n  const formSubmitFormHandler = (event) => {\n       event.preventDefault();\n\n       if(name.trim() === '' ){\n        setEnteredNameISValid(false);\n         return;\n       }\n\n  \n       setEnteredNameISValid(true);\n\n       let data = {\n           textField,\n           email,\n           name,\n           phoneNumber,\n           value\n       }\n\n       setFormData([...formData,data]);\n       setTextField('');\n       setEmail('');\n       setName('');\n       setPhoneNumber('');\n       setValue('');\n  };\n\n  useEffect(() => {\n      localStorage.setItem('formData',JSON.stringify(formData));\n  }, [formData])\n\n\n  const nameInputClasses = enteredNameIsValid ? 'sm-input' : 'invalid-input';\n  const labelClasses = enteredNameIsValid ? '' : 'invalid-label';\n  return (\n    <div className=\"App\">\n        <Tabs defaultActiveKey=\"1\">\n          <TabPane tab=\"Form\" key=\"1\">\n            <div className=\"card-from-wrapper\">\n              <div className=\"heading-text\">Aromatic Bar</div>\n              <div className=\"subheading-text\">We are committed to providing you with the best dining experience possible, \n              so we welcome your comments.please fill out this questionnaire. Thank you</div>\n             <div className=\"from-wrapper\">\n\n              <form onSubmit={formSubmitFormHandler}>\n\n\n                  <div className=\"input-wrapper\">\n                    <div className=\"data-wrapper\">\n                      <label>Text Field</label><br/>\n                       <input \n                        className=\"sm-input\"\n                        type=\"text\"\n                        value={textField}\n                        onChange={(e) => {setTextField(e.target.value)}} \n                        />\n                    </div>\n\n                    <div className=\"data-wrapper\">\n                      <label>Email Field</label><br/>\n                       <input \n                        className=\"sm-input\"\n                        value={email} \n                        type=\"email\" \n                        onChange={(e) => {setEmail(e.target.value)}}\n                        />\n                    </div>\n                   </div>   \n                  \n\n                  <div className=\"input-wrapper\">\n                     <div className=\"data-wrapper\">\n                        <label>Phone Field</label><br/>\n                        <input \n                        className=\"sm-input logo-input\"\n                        type=\"text\"\n                        value={phoneNumber} \n                        minLength=\"10\"\n                        onChange={(e) => {setPhoneNumber(e.target.value)}}\n                        />\n                        <img src={flag} className=\"logo-wrapper\" alt=\"flag\"/>\n                      </div>\n\n                  <div className=\"data-wrapper\">\n                    <label>Radio button</label><br/>\n                     <Radio.Group onChange={(e) => {setValue(e.target.value)}} value={value} >\n                       <Radio value='Excellent'>Excellent</Radio>\n                       <Radio value='Good'>Good</Radio>\n                       <Radio value='Fair'>Fair</Radio>\n                       <Radio value='Bad'>Bad</Radio>\n                     </Radio.Group>\n                   </div>\n                     \n                </div>\n                \n                <div className=\"input-wrapper\">\n                   <div className=\"data-wrapper\">\n                      <label className={labelClasses}>Name*</label>\n                      <input\n                      className={nameInputClasses}\n                      value={name}\n                      onChange={(e) => {setName(e.target.value)}} \n                       />\n                 {!enteredNameIsValid && <p className=\"error-message\">Error: This is mandatory field</p>}\n                   </div>\n                 </div>\n                   \n                 <div className=\"input-button-wrapper\">\n                   <div><button>Add data</button></div>\n                 </div>\n              </form>\n              </div>\n          </div>\n          </TabPane>\n        <TabPane tab=\"Table\" key=\"2\">\n          {\n            formData.length < 1 && <div className=\"data-not-found\">data are not found</div>\n          }\n          {\n            formData.length > 0 && <TableData formData={formData}/>\n          }\n              \n        </TabPane>\n\n  </Tabs>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}